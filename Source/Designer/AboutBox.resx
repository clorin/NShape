<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>